alias ls='ls --color'
alias steam-wine='wine ~/.wine/drive_c/Program\ Files\ \(x86\)/Steam/Steam.exe >/dev/null 2>&1 &'
alias '$='
alias '#=sudo'
alias "colw=perl -pe 's/( +)/\\033[41m\$1\\033[00m/g'"
alias g=git
alias gxdep='f() { gx deps --tree --highlight=$1 };f'
alias wut='echo w√ºt'

alias pd='popd'
alias gwc='pushd $(cat gx-workspace-update.json | jq .Current --raw-output)'
alias cdgw='f() { export GOPATH=$(cat gx-workspace-update.json | jq .GoPath --raw-output); pushd $(gofind $1) };f'
alias cdgo='f() { cd $(gofind $1) };f'
alias cdgosrc='cd ~/.opt/go/src/github.com'
alias vimp='f() { vim $(which $1) };f'
alias gxtree='f() { paste <(gx deps --tree --highlight=$1) <(gx deps --tree --highlight=$1 | awk -v gopath=$GOPATH '"'"'{print gopath "/src/gx/ipfs/"$(NF-1)"/"$(NF-2)"/package.json"}'"'"' | sed -r '"'"'s/\x1b\[[0-9;]*m?//g'"'"' | xargs cat | jq .gx.dvcsimport --raw-output | xargs -i cat $GOPATH/src/{}/package.json | jq .version --raw-output) | awk -v yellow="$(tput setaf 3)" -v reset="$(tput sgr0)" '"'"'{if($(NF)==$(NF-1)){ print $0 }else{ print yellow $0 reset }}'"'"'};f'
alias git-pullall='find . -maxdepth 1 -mindepth 1 -type d | xargs -i sh -c "cd {}; pwd; git pull --ff-only"'

# get dvcs deps using gx deps
alias gx-goget='gx deps | xargs -L 1 sh -c "ipfs cat \$1/\$0/package.json | jq .gx.dvcsimport --raw-output" | xargs go get'

alias gitcid='f() { printf z; printf "01781114$1" | bases hex base58; echo };f'

alias gxpkgname='f(){ ipfs ls $1 --enc json | jq ".Objects[0].Links[0].Name" --raw-output };f'
alias gxpkg='f(){ cat package.json | jq ".gxDependencies[] | select(.name == \"$1\")" };f '
alias gxfixupdate='f(){ cat gx-workspace-update.json | jq ".Changes[]" --raw-output | xargs -i bash -c "paste <(git cat-file blob \$(git ls-tree HEAD^ | grep package.json | awk \"{print \\\$3}\") | jq \".gxDependencies[] | select(.name == \\\"\$(ipfs ls {} --enc json | jq \".Objects[0].Links[0].Name\" --raw-output)\\\") | .hash\" --raw-output) <(echo {})" | awk "NF==2{print}{}" | tee .gxfix };f'
alias gxfixapply='f(){ git checkout -- package.json; cat .gxfix | xargs -l gx update };f'
alias sl='sl | lolcat'

misdeps() {
	go vet ./... 2>&1 | grep 'cannot find package' | grep -o '/[A-Z0-9a-z-]*"' | grep -o '[^/"]*' | xargs -i sh -c 'cat package.json | jq -c ".gxDependencies[] | select(.name = \"{}\") | {h: .hash, n: .name}"'
}

tempgo() {
  pkgname=$1
  gp=$(mktemp -d /tmp/gopath.XXXXX)
  echo go get $pkgname...
  mkdir -p $gp/src
  GOPATH=$gp go get $pkgname
  pushd $gp/src/$pkgname
  GOPATH=$gp zsh
  popd
  echo "Cleaning up.."
  rm -rf $gp
}

gxupdate() {
	pkgname=$(gxpkgname $1)
	echo "Updating ${pkgname}"

	gx update $(gxpkg $pkgname | jq .hash --raw-output) $1
}

alias tipfs='IPFS_PATH=/tmp/ipfs ipfs '

alias myip='dig +short myip.opendns.com @resolver1.opendns.com'


hack() {
	git clone https://$1
	cd $(basename $1)
	git checkout -b $2
}
